author: rastreator
name: unconstrained_delegation
state: enabled
tactic: privilege escalation
tag: attack
description: Get accounts with unconstrained delegation.
statement:
  main: >-
    match (n{enabled:true, domain:'RAS-DOMAIN'})
    where n.unconstraineddelegation = true and not (n)-[:MemberOf]->(:Group{name:'RAS-DC@RAS-DOMAIN'})
    unwind labels(n) as type
    unwind (case n.serviceprincipalnames when [] then [""] else n.serviceprincipalnames end) as spn
    return n.name, type, spn
    order by type, n.name, spn asc
reference:
  - https://shenaniganslabs.io/media/Constructing%20Kerberos%20Attacks%20with%20Delegation%20Primitives.pdf
  - https://ired.team/offensive-security-experiments/active-directory-kerberos-abuse/domain-compromise-via-unrestricted-kerberos-delegation
  - https://www.tarlogic.com/es/blog/kerberos-iii-como-funciona-la-delegacion/
nextsteps:
  rt:
    - Compromise them.
    - Use the "Printer bug" (MS-RPRN) or "PetitPotam" (MS-EFSRPC) to coerce machine authentication.
    - Dump TGTs from memory.
  bt:
    - Evaluate the use of resource-based constrained delegation.
