author: rastreator
name: constrained delegation
state: enabled
tactic: privilege escalation
tag: attack
description: Get accounts with constrained delegation.
statement:
  table: >-
    match (n{enabled:true, domain:'RAS-DOMAIN'})
    where n.allowedtodelegate and not (n)-[:MemberOf]->(:Group{name:'RAS-DC@RAS-DOMAIN'})
    unwind labels(n) as type
    unwind n.serviceprincipalnames as spn
    unwind n.allowedtodelegate as atd
    return n.name, type, spn, atd
    order by type, n.name, spn, atd
reference:
  - https://shenaniganslabs.io/media/Constructing%20Kerberos%20Attacks%20with%20Delegation%20Primitives.pdf
  - https://ired.team/offensive-security-experiments/active-directory-kerberos-abuse/abusing-kerberos-constrained-delegation
  - https://blog.netspi.com/cve-2020-17049-kerberos-bronze-bit-overview/
nextsteps:
  rt:
    - Compromise them.
    - Check if the user has the NOT_DELEGATED flag or belongs to the Protected Users group.
    - Check if userAccountControl has TRUSTED_TO_AUTH_FOR_DELEGATION value to directly request TGS on behalf of any user (S4U2self).
    - Check the SPN server name/port and try to change the service name to abuse other services on the same server.
    - Dump TGSs from memory.
    - Perform impersonation attacks (bronze bit).
  bt:
    - Evaluate the use of resource-based constrained delegation.
